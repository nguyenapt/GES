@model GES.Inside.Web.Models.GesUserViewModel
@section scripts {
    @Scripts.Render("~/bundles/page-accountmgmt-details")
}
@{
    var submitBtnText = "Save";
    var cancelBtnText = "Cancel";
    var disabled = (ViewBag.Id == "Add");
}

<div class="row">
    <div class="col-xs-12">
        <!-- Import via Excel -->
        <div class="box" id="box-create-edit-acc">
            @using (Ajax.BeginForm("CreateAccount", "AccountMgmt", new { @id = "create-edit-acc-form" }, new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "POST",
                OnBegin = "$('.btn-acc-details-submit').button('loading')",
                OnComplete = "resetCreateEditAccountButton()"
                //UpdateTargetId = "table"
            }, FormMethod.Post))
            {
                <div class="box-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    @Html.HiddenFor(model => model.Id)
                    
                    <!--Organizations-->
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.OrgId):
                        </div>
                        <div class="editor-field">
                            @{
                                    @Html.DropDownListFor(m => m.OrgId, Model.Organizations, "Select Organization...", new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.OrgId, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.UserName):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.Password):
                        </div>

                        <div class="editor-field row">
                            <div class="col-md-10 col-sm-12">
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control txt-user-password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 col-sm-12">
                                <input type="button" class="btn btn-primary btn-block" id="btn-generate-password" value="Generate" />
                            </div>
                        </div>
                        
                    </div>

                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.FirstName):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.LastName):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.Title):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.Phone):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.Email):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.Comment):
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Comment, new { @class = "form-control" })
                        </div>
                    </div>

                    <!--User Roles-->
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.SelectedRoles):
                        </div>
                        <div class="editor-field">
                            @Html.ListBoxFor(m => m.SelectedRoles, new SelectList(Model.Roles, "Value", "Text"), new { @id = "ddlRoles" })
                            @Html.ValidationMessageFor(model => model.SelectedRoles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                <!--User Claim-->
                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.SelectedClaims):
                        </div>
                        <div class="editor-field">
                            @Html.ListBoxFor(m => m.SelectedClaims, new SelectList(Model.Claims, "Value", "Text"), new { @id = "ddlClaims" })
                            @Html.ValidationMessageFor(model => model.SelectedClaims, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.IsLocked):
                        </div>
                        <div class="editor-field">
                            @Html.CheckBoxFor(model => model.IsLocked)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="editor-label control-label">
                            @Html.LabelFor(model => model.LastLogIn):
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.LastLogInString, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                </div><!-- /.box-body -->
                <div class="box-footer">
                    <div style="float: right">
                        <button class="btn btn-success btn-acc-details-submit" id="btn-acc-details-submit" data-loading-text="Processing..." type="submit">@submitBtnText</button>
                        
                        <input class="btn btn-danger" type="button" value="Delete" id="delete-account" data-confirm-title="Delete Account" data-confirm-message="Are you sure you want to delete selected account?"
                               data-confirm-direction="ltr" data-confirm-ok="Delete" data-confirm-cancel="Cancel"
                               @{if (disabled)
                                   {
                                       @:disabled="disabled" 
                                   }
                               }
                        
                        />
                        <input class="btn" type="button" value="Cancel" id="cancel-save" data-confirm-title="Do you want to leave this site?" data-confirm-message="Changes you made may not be saved"
                               data-confirm-direction="ltr" data-confirm-ok="Leave" data-confirm-cancel="Stay"/>
                    </div>
                    
                </div><!-- /.box-footer -->
            }
        </div><!-- /.box -->
    </div><!-- /.col -->
</div><!-- /.row -->