@using System.Text
@using GES.Clients.Web.Extensions
@using WebGrease.Css.Extensions
@using GES.Common.Resources
@using GES.Inside.Data.DataContexts
@using GES.Inside.Data.Models
@model IList<I_EngagementDiscussionPoints>
@{
    var caseProfileInvisibleEntities = ViewBag.CaseProfileInvisibleEntities as IList<GesCaseProfileTemplatesViewModel>;
}
@if (!caseProfileInvisibleEntities.Any(x => x.EntityCodeType == "DISCUSSION-POINTS"))
{
    if (Model != null && Model.Any())
    {
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    @Resources.DiscussionPoints
                </h3>
            </div><!-- /.box-header -->
            <div class="box-body">
                <span class="explanation">@Resources.DiscussionPointsExplanation</span>
                <dl class="dl-vertical case-report-block">
                    @foreach (var discussionPoint in Model)
                    {
                        if (discussionPoint?.Description == null)
                        { continue; }

                        var customContent = new StringBuilder("<ul class='ges-content normal-list'>");

                        discussionPoint.Description.Split('\n').Where(p => !string.IsNullOrWhiteSpace(p)).ForEach(point =>
                        {
                            customContent.Append("<li>" + point.Replace("*", "").Trim() + "</li>");
                        });
                        customContent.Append("</ul>");
                        @Html.RenderBlockContentWithCustomContent(discussionPoint.Name, customContent.ToString())
                    }
                </dl>
            </div>
        </div>
    }
}