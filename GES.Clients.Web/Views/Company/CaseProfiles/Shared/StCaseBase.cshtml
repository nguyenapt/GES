@using GES.Clients.Web.Extensions
@using GES.Clients.Web.Models
@using GES.Common.Configurations
@using GES.Common.Resources
@using GES.Inside.Data.Models.Anonymous
@using GES.Inside.Data.Models.CaseProfiles
@model GES.Inside.Data.Models.CaseProfiles.CaseProfileCaseComponent

@{
    if (Model.ConfirmedViolation)
    {
        Model.CustomContent = Html.Partial("~/Views/Company/CaseProfiles/Shared/CaseProfileBusinessConductViewModel/_ConfirmedViolation.cshtml", new ConfirmedViolationModel
        {
            ConfirmedViolation = Model.ConfirmedViolation,
            ConfirmedViolationDate = Model.ConfirmedViolationDate
        }).ToString();
    }
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title"><i class="fa fa-briefcase" aria-hidden="true"></i> 
            @Resources.CaseInfoGlobal
        </h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(m => m.AlertEntryDate)</dt>
            <dd>@(Model.AlertEntryDate?.ToString(Configurations.DateFormat) ?? "")</dd>
            
            <dt>@Html.DisplayNameFor(m => m.Norm)</dt>
            <dd><strong>@Model.Norm</strong></dd>
            
            <dt>@Html.DisplayNameFor(m => m.Location)</dt>
            <dd><strong>@Model.Location</strong> <span class="flag-icon flag-icon-@Model.CountryCode"></span></dd>

            <dt><strong>@Html.RenderProperty(m => m.Conclusion)</strong></dt>
            <dd>
                @if (!string.IsNullOrEmpty(Model.Conclusion))
                {
                    @SharedComponents.BuildViewArchivedLink(Resources.ConclusionHistory, Resources.ViewHistory)
                }
            </dd>
            <dd></dd>
            
            @if (!string.IsNullOrEmpty(Model.CustomContent))
            {
                @Html.Raw(Model.CustomContent)
            }
        </dl>
    </div>
    <!-- /.box-body -->
</div>

@{ Html.RenderPartial("~/Views/Shared/_Dialog.cshtml", new ModalPopupViewModel
    {
        ModalTitle = Resources.ConclusionHistory,
        DateContentPairs = Model.ConclusionArchive?.Select(o => new KeyValueObject<string, string>(o.PublishedDate.ToString(Configurations.DateFormat), o.Content)).ToList()
    });
}

@Html.Partial("~/Views/Company/_StatusTooltip.cshtml")