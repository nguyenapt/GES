@using GES.Clients.Web.Extensions
@using GES.Clients.Web.Models
@using GES.Common.Configurations
@using GES.Common.Resources
@using GES.Inside.Data.Models.Anonymous
@using GES.Inside.Data.Models.CaseProfiles
@model SrCaseProfileCaseComponent

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">
            <i class="fa fa-briefcase" aria-hidden="true"></i>
            @Resources.CaseInfo
        </h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <dl class="dl-horizontal">

            @if (Model.AlertEntryDate != null)
            {
                <dt>@Html.DisplayNameFor(m => m.AlertEntryDate)</dt>
                <dd>@(Model.AlertEntryDate?.ToString(Configurations.DateFormat) ?? "")</dd>
            }

            <dt>@Html.DisplayNameFor(m => m.EngagementTheme)</dt>
            <dd>@Model.EngagementTheme</dd>
            
            @if (!string.IsNullOrEmpty(Model.Theme))
            {
                <dt>@Html.DisplayNameFor(m => m.Theme)</dt>
                <dd><strong>@Model.Theme</strong></dd>
    
            }
            
            <dt>@Html.DisplayNameFor(m => m.Location)</dt>
            <dd><strong>@Model.Location</strong> <span class="flag-icon flag-icon-@Model.CountryCode"></span></dd>

            <dt><strong>@Html.RenderProperty(m => m.Recommendation)</strong></dt>
            <dd>
                @if (!string.IsNullOrEmpty(Model.Recommendation))
                {
                    @SharedComponents.BuildViewArchivedLink(Resources.EngagementStatusHistory, Resources.ViewHistory)
                }
            </dd>

            @if (!string.IsNullOrEmpty(Model.CustomContent))
            {
                @Html.Raw(Model.CustomContent)
            }
        </dl>

        @if (Model.StatusComponent != null)
        {
            Html.RenderPartial("CaseProfiles/Shared/Status", Model.StatusComponent as CaseProfileStatusViewModel);
        }
    </div>
    <!-- /.box-body -->
</div>

@{ Html.RenderPartial("~/Views/Shared/_Dialog.cshtml", new ModalPopupViewModel
    {
        ModalTitle = Resources.EngagementStatusHistory,
        DateContentPairs = Model.RecommendationArchive?.Select(o => new KeyValueObject<string, string>(o.PublishedDate.ToString(Configurations.DateFormat), o.Content)).ToList()
    });
}

@Html.Partial("~/Views/Company/_StatusTooltip.cshtml")