@using GES.Inside.Data.Models
@using GES.Common.Resources
@using GES.Common.Enumeration
@using GES.Common.Configurations
@using GES.Inside.Data.Models.CaseProfiles

@model GES.Inside.Data.ExportModels.GesExportModel<CaseProfileCoreViewModel>
@{
    var viewModel = (CaseProfileFullAttributeViewModel)Model.Data;

    var gesCaseReportType = (GesCaseReportType)ViewBag.CaseProfileType;

    var isSrCase = gesCaseReportType == GesCaseReportType.SrEngage || gesCaseReportType == GesCaseReportType.SrArchived || gesCaseReportType == GesCaseReportType.SrCarbonRiskEngage || gesCaseReportType == GesCaseReportType.SrCarbonRiskArchived || gesCaseReportType == GesCaseReportType.SrCarbonRiskResolved;
    var isSrEmeCase = gesCaseReportType == GesCaseReportType.SrEmeEngage || gesCaseReportType == GesCaseReportType.SrEmeArchived;

    var isSrGovCase = gesCaseReportType == GesCaseReportType.SrGovEngage || gesCaseReportType == GesCaseReportType.SrGovArchived || gesCaseReportType == GesCaseReportType.SrGovResolved;

    var isStCase = gesCaseReportType == GesCaseReportType.StAlert || gesCaseReportType == GesCaseReportType.StandardAlertAndIndication || gesCaseReportType == GesCaseReportType.StArchived || gesCaseReportType == GesCaseReportType.StConfirmed || gesCaseReportType == GesCaseReportType.StIndicationOfViolation || gesCaseReportType == GesCaseReportType.StResolved;

    var templateExportPath = "/Export_Sustainalytics";
}
<div class="box box-primary ">
    <div class="box-header with-border">
        <h3 class="box-title">
            <i class="fa fa-briefcase" aria-hidden="true"></i>
            @if (isStCase)
            {
                @Resources.CaseInfoGlobal
            }
            else
            {
                @Resources.CaseInfo
            }
        </h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        @if (viewModel?.CaseComponent?.AlertEntryDate != null)
        {
            <strong>@Resources.EntryDate</strong>
            <span class="text-muted">@(viewModel.CaseComponent.AlertEntryDate?.ToString(Configurations.DateFormat) ?? "")</span>
            <br />
        }

        @if (!isStCase)
        {
            <strong>@Resources.EngagementType</strong>
            <span class="text-muted">@viewModel.CaseComponent.EngagementTheme</span>
            <br />
        }

        @if (isSrCase || isSrEmeCase || isSrGovCase || gesCaseReportType == GesCaseReportType.BpEngage || gesCaseReportType == GesCaseReportType.BpArchived)
        {
            var srCaseCompoment = (FullAttributeCaseProfileCaseComponent)viewModel?.CaseComponent;

            if (srCaseCompoment != null)
            {
                <strong>@Html.DisplayNameFor(m => srCaseCompoment.Theme)</strong>
                <span><strong>@srCaseCompoment.Theme</strong></span>
                <br />
                if (!string.IsNullOrEmpty(srCaseCompoment.NormArea))
                {
                    <strong>@Html.DisplayNameFor(m => srCaseCompoment.NormArea)</strong>
                    <span class="text-muted">@srCaseCompoment.NormArea</span>
                    <br />
                }

                <strong>@Html.DisplayNameFor(m => srCaseCompoment.Location)</strong>
                <span class="text-muted">@srCaseCompoment.Location <span class="flag-icon flag-icon-@srCaseCompoment.CountryCode"></span></span>
                <br />
                <strong>@Html.DisplayNameFor(m => srCaseCompoment.Recommendation)</strong>
                <span class="text-muted">
                    @srCaseCompoment.Recommendation
                </span>
                if (!string.IsNullOrEmpty(srCaseCompoment.CustomContent))
                {
                    @Html.Raw(srCaseCompoment.CustomContent)
                }
            }
        }
        else
        {
            <strong>@Html.DisplayNameFor(m => viewModel.CaseComponent.Norm)</strong>
            <span class="text-muted">@viewModel.CaseComponent.Norm</span>
            <br />
            <strong>@Html.DisplayNameFor(m => viewModel.CaseComponent.Location)</strong>
            <span class="text-muted">@viewModel.CaseComponent.Location <span class="flag-icon flag-icon-@viewModel.CaseComponent.CountryCode"></span></span>
            <br />
            if (!isStCase)
            {
                <strong>@Html.DisplayNameFor(m => viewModel.CaseComponent.Recommendation)</strong>
                <span class="text-muted">@viewModel.CaseComponent.Recommendation</span>
                <br />
            }
@*             <strong>@Html.DisplayNameFor(m => viewModel.CaseComponent.Conclusion)</strong> *@
@*             <span class="text-muted">@viewModel.CaseComponent.Conclusion</span> *@

            if (!string.IsNullOrEmpty(viewModel.CaseComponent.CustomContent))
            {
                @Html.Raw(viewModel.CaseComponent.CustomContent)
            }
        }

    </div><!-- /.box-body -->
</div>